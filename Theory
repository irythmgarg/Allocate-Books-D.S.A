You are given an array a where each element represents the number of pages in a book. 
You need to divide these books among students such that each student gets a contiguous set of books,
and the maximum number of pages assigned to a student is minimized.

If it is impossible to assign the books (e.g., the number of students is greater than the number of books), return -1.

Solution Explanation
Problem Requirements:

Divide books among students such that the maximum pages assigned to a student is minimized.
Each student must get a contiguous subset of books.
Approach:

Use binary search to find the minimum of the maximum pages assigned:
Define the range [s, e]:
s: The largest single book's pages (as each student needs at least one book).
e: The total sum of all pages (assigning all books to one student).
Use a helper function hlo to determine the number of students required for a given maximum mid.
Steps:

Initialize the range [s, e]:
s = max_element(a) (minimum possible maximum pages).
e = sum of all pages (maximum possible maximum pages).
Perform binary search:
For each mid, calculate the required students using the hlo function.
If more students are required than available, increase the lower bound.
Otherwise, reduce the upper bound to minimize the maximum pages.
Returning the Result:

After binary search, the result is stored in s, representing the smallest possible maximum pages.
